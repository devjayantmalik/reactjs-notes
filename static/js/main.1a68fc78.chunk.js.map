{"version":3,"sources":["components/EditText.js","components/NoteItem.js","App.js","actions/index.js","reducers/index.js","index.js"],"names":["EditText","props","searchFormSubmitted","e","preventDefault","onSubmit","state","term","setState","this","className","onChange","target","value","type","placeholder","React","Component","NoteItem","style","fontSize","note","text","onClick","onDelete","id","App","noteFormSubmitted","count","create","renderNotes","notes","map","key","delete","connect","payload","combineReducers","action","filter","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"iNAiCeA,E,kDA7Bd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAKPC,oBAAsB,SAACC,GACtBA,EAAEC,iBACF,EAAKH,MAAMI,SAAS,EAAKC,MAAMC,MAC/B,EAAKC,SAAS,CAACD,KAAM,MANrB,EAAKD,MAAQ,CAACC,KAAM,IAHH,E,qDAYT,IAAD,OACP,OACC,0BAAMF,SAAUI,KAAKP,qBACpB,yBAAKQ,UAAU,uBACd,2BACCC,SAAU,SAAAR,GAAC,OAAI,EAAKK,SAAS,CAACD,KAAMJ,EAAES,OAAOC,SAC7CC,KAAK,OACLC,YAAaN,KAAKR,MAAMc,YACxBF,MAAOJ,KAAKH,MAAMC,OAEnB,uBAAGG,UAAU,sB,GAvBKM,IAAMC,WCSdC,EATE,SAACjB,GAChB,OACE,yBAAKS,UAAU,uBACX,uBAAGS,MAAO,CAACC,SAAU,SAAUV,UAAU,SAAST,EAAMoB,KAAKC,MAC7D,4BAAQZ,UAAU,gBAAgBa,QAAS,kBAAMtB,EAAMuB,SAASvB,EAAMoB,KAAKI,MAA3E,YCCFC,E,4MAGJC,kBAAoB,SAACL,GACnB,IAAMG,EAAK,EAAKxB,MAAM2B,MAAQ,EAC9B,EAAK3B,MAAM4B,OAAOJ,EAAIH,I,EAGxBQ,YAAc,WAEZ,OADc,EAAK7B,MAAM8B,MACZC,KAAI,SAAAX,GACf,OACE,kBAAC,EAAD,CACEY,IAAKZ,EAAKI,GACVJ,KAAMA,EACNG,SAAU,SAAAC,GAAE,OAAI,EAAKxB,MAAMiC,OAAOT,U,uDAOxC,OACE,yBAAKf,UAAU,oBACb,kBAAC,EAAD,CACEL,SAAUI,KAAKkB,kBACfZ,YAAY,kCAEd,yBAAKL,UAAU,wBACb,8CAAoBD,KAAKR,MAAM2B,OAC9BnB,KAAKqB,oB,GA9BEd,IAAMC,WA6CTkB,eAPS,SAAC7B,GACrB,MAAO,CACLsB,MAAOtB,EAAMsB,MACbG,MAAOzB,EAAMyB,SAIqB,CACtC,OCtDwB,SAACN,EAAIH,GAC3B,MAAO,CACLR,KAAM,cACNsB,QAAS,CAACX,KAAIH,UDoDlB,OChDwB,SAACG,GACvB,MAAO,CACLX,KAAM,cACNsB,QAAS,CAACX,SD2CDU,CAGZT,G,eEhCYW,cAAgB,CAC7B,MAvBW,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIO,EAAW,uCACnC,MAAmB,gBAAhBA,EAAOxB,KACF,GAAN,mBAAWiB,GAAX,CAAkBO,EAAOF,UAER,gBAAhBE,EAAOxB,KACDiB,EAAMQ,QAAO,SAAAlB,GAAI,OAAIA,EAAKI,KAAOa,EAAOF,QAAQX,MAGlDM,GAgBP,MAbiB,WAAwB,IAAvBA,EAAsB,uDAAd,EAAGO,EAAW,uCACxC,MAAmB,gBAAhBA,EAAOxB,KACDiB,EAAQ,EAEE,gBAAhBO,EAAOxB,KACDiB,EAAQ,EAEVA,KCbTS,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OACWC,SAASC,cAAc,Y","file":"static/js/main.1a68fc78.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass EditText extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {term: ''}\n\t}\n\n\tsearchFormSubmitted = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmit(this.state.term);\n\t\tthis.setState({term: ''})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<form onSubmit={this.searchFormSubmitted}>\n\t\t\t\t<div className=\"ui fluid icon input\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={e => this.setState({term: e.target.value})}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\t\tvalue={this.state.term}\n\t\t\t\t\t/>\n\t\t\t\t\t<i className=\"search icon\"></i>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default EditText;\n","import React from 'react';\n\n\nconst NoteItem = (props) => {\n  return (\n    <div className=\"ui floating message\">\n        <p style={{fontSize: '1.4em'}} className=\"large\">{props.note.text}</p>\n        <button className=\"ui red button\" onClick={() => props.onDelete(props.note.id)}>Delete</button>\n    </div>\n  )\n}\n\nexport default NoteItem;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport EditText from './components/EditText';\nimport NoteItem from './components/NoteItem';\n\nimport {createNote, deleteNote} from './actions';\n\nclass App extends React.Component{\n\n\n  noteFormSubmitted = (text) => {\n    const id = this.props.count + 1;\n    this.props.create(id, text);\n  }\n\n  renderNotes = () => {\n    const notes = this.props.notes;\n    return notes.map(note => {\n      return (\n        <NoteItem\n          key={note.id}\n          note={note}\n          onDelete={id => this.props.delete(id)}\n        />\n      );\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"ui basic segment\">\n        <EditText\n          onSubmit={this.noteFormSubmitted}\n          placeholder=\"Enter Note text to take note.\" />\n\n        <div className=\"ui container segment\">\n          <p>Count Of Notes: {this.props.count}</p>\n          {this.renderNotes()}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      count: state.count,\n      notes: state.notes,\n    };\n}\n\nexport default connect(mapStateToProps, {\n  'create': createNote,\n  'delete': deleteNote\n})(App);\n","export const createNote = (id, text) => {\n    return {\n      type: \"CREATE_NOTE\",\n      payload: {id, text}\n    }\n}\n\nexport const deleteNote = (id) => {\n    return {\n      type: 'DELETE_NOTE',\n      payload: {id}\n    }\n}\n","import {combineReducers} from 'redux';\n\nconst Note = (notes = [], action) => {\n  if(action.type === 'CREATE_NOTE')\n    return [...notes, action.payload]\n\n  if(action.type === 'DELETE_NOTE'){\n    return notes.filter(note => note.id !== action.payload.id)\n  }\n\n  return notes;\n}\n\nconst countNotes = (notes = 0, action) => {\n  if(action.type === 'CREATE_NOTE')\n    return notes + 1;\n\n  if(action.type === 'DELETE_NOTE')\n    return notes - 1;\n\n  return notes;\n\n}\n\nexport default combineReducers({\n  \"notes\": Note,\n  'count': countNotes\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers'\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}